<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
    <testsuite name="checkattribute;check-a-page-without-accessibility-errors" tests="2" failures="0" skipped="2">
        <properties>
            <property name="URI" value="features/checkAccessibility.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/checkAccessibilityPass.html&quot;" classname="checkattribute;check-a-page-without-accessibility-errors">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the &quot;a11y-pass&quot; page has no accessibility errors" classname="checkattribute;check-a-page-without-accessibility-errors">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkattribute;check-a-page-with-accessibility-errors-given" tests="1" failures="1" skipped="0">
        <properties>
            <property name="URI" value="features/checkAccessibility.feature">
            </property>
        </properties>
        <testcase name="Given the &quot;a11y-pass&quot; page has no accessibility errors" classname="checkattribute;check-a-page-with-accessibility-errors-given" time="0.002">
            <failure message="TypeError: Cannot read property &apos;mainFrame&apos; of null">TypeError: Cannot read property &apos;mainFrame&apos; of null
    at isPage (/node_modules/axe-puppeteer/dist/axePuppeteer.js:60:22)
    at getFrame (/node_modules/axe-puppeteer/dist/axePuppeteer.js:63:9)
    at new AxePuppeteer (/node_modules/axe-puppeteer/dist/axePuppeteer.js:92:22)
    at BrowserScope.module.exports (/features/support/check/checkAccessibility.js:10:25)</failure>
        </testcase>
    </testsuite>
    <testsuite name="checkattribute;check-attributes" tests="4" failures="0" skipped="4">
        <properties>
            <property name="URI" value="features/checkAttributes.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/checkAttribute.html&quot;" classname="checkattribute;check-attributes">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the attribute &quot;class&quot; from element &quot;#cssClass&quot; is &quot;foobar bambaz&quot;" classname="checkattribute;check-attributes">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the attribute &quot;href&quot; from element &quot;#href&quot; is &quot;/somepage&quot;" classname="checkattribute;check-attributes">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the attribute &quot;data-favorite-snack&quot; from element &quot;ul&quot; is &quot;muffins&quot;" classname="checkattribute;check-attributes">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkattribute;check-attributes-given" tests="3" failures="1" skipped="2">
        <properties>
            <property name="URI" value="features/checkAttributes.feature">
            </property>
        </properties>
        <testcase name="Given the attribute &quot;class&quot; from element &quot;#cssClass&quot; is not &quot;foobar&quot;" classname="checkattribute;check-attributes-given">
            <failure message="TypeError: Cannot read property &apos;$eval&apos; of null">TypeError: Cannot read property &apos;$eval&apos; of null
    at BrowserScope.module.exports (/features/support/check/checkAttribute.js:12:42)</failure>
        </testcase>
        <testcase name="And the attribute &quot;charset&quot; from element &quot;meta&quot; is &quot;utf-8&quot;" classname="checkattribute;check-attributes-given">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the attribute &quot;href&quot; from element &quot;a[id=&apos;href&apos;]&quot; is not &quot;/pickle-rick&quot;" classname="checkattribute;check-attributes-given">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkattributeconains;check-attribute-contains" tests="4" failures="0" skipped="4">
        <properties>
            <property name="URI" value="features/checkAttributesContains.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/checkAttribute.html&quot;" classname="checkattributeconains;check-attribute-contains">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the attribute &quot;class&quot; from element &quot;#cssClass&quot; contain &quot;foobar&quot;" classname="checkattributeconains;check-attribute-contains">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the attribute &quot;href&quot; from element &quot;#href&quot; contain &quot;page&quot;" classname="checkattributeconains;check-attribute-contains">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the attribute &quot;data-favorite-snack&quot; from element &quot;ul&quot; contain &quot;ins&quot;" classname="checkattributeconains;check-attribute-contains">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkattributeconains;check-attribute-contains-given" tests="3" failures="1" skipped="2">
        <properties>
            <property name="URI" value="features/checkAttributesContains.feature">
            </property>
        </properties>
        <testcase name="Given the attribute &quot;class&quot; from element &quot;#cssClass&quot; not contain &quot;weasel&quot;" classname="checkattributeconains;check-attribute-contains-given">
            <failure message="TypeError: Cannot read property &apos;$eval&apos; of null">TypeError: Cannot read property &apos;$eval&apos; of null
    at BrowserScope.module.exports (/features/support/check/checkAttributeContains.js:12:42)</failure>
        </testcase>
        <testcase name="And the attribute &quot;charset&quot; from element &quot;meta&quot; contain &quot;utf&quot;" classname="checkattributeconains;check-attribute-contains-given">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the attribute &quot;href&quot; from element &quot;a[id=&apos;href&apos;]&quot; not contain &quot;/pickle-rick&quot;" classname="checkattributeconains;check-attribute-contains-given">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkcontainstext;check-element-contains-text" tests="5" failures="0" skipped="5">
        <properties>
            <property name="URI" value="features/checkContainsText.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/checkContainsText.html&quot;" classname="checkcontainstext;check-element-contains-text">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;.wizard&quot; contains text &quot;Harry&quot;" classname="checkcontainstext;check-element-contains-text">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;.wizard&quot; contains text &quot;You&apos;re a wizard Harry&quot;" classname="checkcontainstext;check-element-contains-text">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;.plumbus&quot; contains text &quot;Everyone has a Plumbus in their home. First they take the dinglebop, and they smooth it out, with a bunch of Schleem.&quot;" classname="checkcontainstext;check-element-contains-text">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;.wizard&quot; does not contain text &quot;foobar&quot;" classname="checkcontainstext;check-element-contains-text">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkcookieexists;check-for-existing-cookies" tests="5" failures="0" skipped="5">
        <properties>
            <property name="URI" value="features/checkCookieExists.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/checkCookieExists.html&quot;" classname="checkcookieexists;check-for-existing-cookies">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the cookie &quot;existing-cookie&quot; exist" classname="checkcookieexists;check-for-existing-cookies">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the cookie &quot;undefined-value-cookie&quot; exist" classname="checkcookieexists;check-for-existing-cookies">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the cookie &quot;second-existing-cookie&quot; exist" classname="checkcookieexists;check-for-existing-cookies">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the cookie &quot;not-existing-cookie&quot; not exist" classname="checkcookieexists;check-for-existing-cookies">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkcookieexists;check-for-existing-cookie-given" tests="4" failures="1" skipped="3">
        <properties>
            <property name="URI" value="features/checkCookieExists.feature">
            </property>
        </properties>
        <testcase name="Given the cookie &quot;existing-cookie&quot; exist" classname="checkcookieexists;check-for-existing-cookie-given">
            <failure message="TypeError: Cannot read property &apos;cookies&apos; of null">TypeError: Cannot read property &apos;cookies&apos; of null
    at BrowserScope.module.exports (/features/support/check/checkCookieExists.js:11:39)</failure>
        </testcase>
        <testcase name="And the cookie &quot;undefined-value-cookie&quot; exist" classname="checkcookieexists;check-for-existing-cookie-given">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the cookie &quot;second-existing-cookie&quot; exist" classname="checkcookieexists;check-for-existing-cookie-given">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the cookie &quot;a random cookie&quot; not exist" classname="checkcookieexists;check-for-existing-cookie-given">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkcookievalue;check-for-cookie-value" tests="5" failures="0" skipped="5">
        <properties>
            <property name="URI" value="features/checkCookieValue.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/checkCookieExists.html&quot;" classname="checkcookievalue;check-for-cookie-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the cookie &quot;undefined-value-cookie&quot; value is &quot;undefined&quot;" classname="checkcookievalue;check-for-cookie-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the cookie &quot;second-existing-cookie&quot; value is &quot;Cookie with a new value&quot;" classname="checkcookievalue;check-for-cookie-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the cookie &quot;existing-cookie&quot; value is &quot;Cookie with a value&quot;" classname="checkcookievalue;check-for-cookie-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the cookie &quot;existing-cookie&quot; value is not &quot;Cookie with a new value&quot;" classname="checkcookievalue;check-for-cookie-value">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkcookievalue;check-for-cookie-value-given" tests="4" failures="1" skipped="3">
        <properties>
            <property name="URI" value="features/checkCookieValue.feature">
            </property>
        </properties>
        <testcase name="Given the cookie &quot;undefined-value-cookie&quot; value is not &quot;foobar&quot;" classname="checkcookievalue;check-for-cookie-value-given" time="0.001">
            <failure message="TypeError: Cannot read property &apos;cookies&apos; of null">TypeError: Cannot read property &apos;cookies&apos; of null
    at BrowserScope.module.exports (/features/support/check/checkCookieValue.js:14:39)</failure>
        </testcase>
        <testcase name="And the cookie &quot;second-existing-cookie&quot; value is not &quot;42&quot;" classname="checkcookievalue;check-for-cookie-value-given">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the cookie &quot;existing-cookie&quot; value is &quot;Cookie with a value&quot;" classname="checkcookievalue;check-for-cookie-value-given">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the cookie &quot;second-existing-cookie&quot; value is &quot;Cookie with a new value&quot;" classname="checkcookievalue;check-for-cookie-value-given">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkelementenabled;check-for-enabled-element" tests="3" failures="0" skipped="3">
        <properties>
            <property name="URI" value="features/checkElementEnabled.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/checkElementEnabled.html&quot;" classname="checkelementenabled;check-for-enabled-element">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then the element &quot;.enabled&quot; is enabled" classname="checkelementenabled;check-for-enabled-element">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the element &quot;[type=&apos;submit&apos;]&quot; is not enabled" classname="checkelementenabled;check-for-enabled-element">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkelementenabled;check-for-enabled-given" tests="3" failures="1" skipped="2">
        <properties>
            <property name="URI" value="features/checkElementEnabled.feature">
            </property>
        </properties>
        <testcase name="Given the element &quot;[type=&apos;button&apos;]&quot; is not enabled" classname="checkelementenabled;check-for-enabled-given" time="0.001">
            <failure message="TypeError: Cannot read property &apos;$eval&apos; of null">TypeError: Cannot read property &apos;$eval&apos; of null
    at BrowserScope.module.exports (/features/support/check/checkElementEnabled.js:10:47)</failure>
        </testcase>
        <testcase name="And the element &quot;.enabled&quot; is enabled" classname="checkelementenabled;check-for-enabled-given">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the element &quot;fieldset&quot; is enabled" classname="checkelementenabled;check-for-enabled-given">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkelementexists;check-element-exists" tests="6" failures="0" skipped="6">
        <properties>
            <property name="URI" value="features/checkElementExists.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/checkElementExists.html&quot;" classname="checkelementexists;check-element-exists">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;[role=&apos;nav&apos;]&quot; is on the page" classname="checkelementexists;check-element-exists">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;footer ul li ol li &gt; div span&quot; is on the page" classname="checkelementexists;check-element-exists">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;.exists&quot; is on the page" classname="checkelementexists;check-element-exists">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;.missing&quot; is not on the page" classname="checkelementexists;check-element-exists">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;section&quot; is not on the page" classname="checkelementexists;check-element-exists">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkelementexists;check-element-exists-given" tests="4" failures="1" skipped="3">
        <properties>
            <property name="URI" value="features/checkElementExists.feature">
            </property>
        </properties>
        <testcase name="Given element &quot;h1&quot; is on the page" classname="checkelementexists;check-element-exists-given" time="0.001">
            <failure message="TypeError: Cannot read property &apos;$&apos; of null">TypeError: Cannot read property &apos;$&apos; of null
    at BrowserScope.module.exports (/features/support/check/checkElementExists.js:9:32)</failure>
        </testcase>
        <testcase name="And element &quot;ul&quot; is on the page" classname="checkelementexists;check-element-exists-given">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And element &quot;.foobs&quot; is not on the page" classname="checkelementexists;check-element-exists-given">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And element &quot;p:first-child&quot; is not on the page" classname="checkelementexists;check-element-exists-given">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkelementvalue;check-element-value" tests="8" failures="0" skipped="8">
        <properties>
            <property name="URI" value="features/checkElementValue.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/checkElementValue.html&quot;" classname="checkelementvalue;check-element-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;#input-value&quot; value is &quot;input with a value&quot;" classname="checkelementvalue;check-element-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;#input-no-value&quot; value is &quot;&quot;" classname="checkelementvalue;check-element-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;#textarea-value&quot; value is &quot;textarea with a value&quot;" classname="checkelementvalue;check-element-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;#textarea-no-value&quot; value is &quot;&quot;" classname="checkelementvalue;check-element-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;#select-value&quot; value is &quot;two&quot;" classname="checkelementvalue;check-element-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;#select-no-value&quot; value is &quot;three&quot;" classname="checkelementvalue;check-element-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;input[type=&apos;submit&apos;]&quot; value is &quot;Submit&quot;" classname="checkelementvalue;check-element-value">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkelementvalue;check-element-value-given" tests="7" failures="1" skipped="6">
        <properties>
            <property name="URI" value="features/checkElementValue.feature">
            </property>
        </properties>
        <testcase name="Given the element &quot;#input-value&quot; value is not &quot;never&quot;" classname="checkelementvalue;check-element-value-given">
            <failure message="TypeError: Cannot read property &apos;$eval&apos; of null">TypeError: Cannot read property &apos;$eval&apos; of null
    at BrowserScope.module.exports (/features/support/check/checkElementValue.js:11:42)</failure>
        </testcase>
        <testcase name="And the element &quot;#input-no-value&quot; value is not &quot;gonna&quot;" classname="checkelementvalue;check-element-value-given">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the element &quot;#textarea-value&quot; value is not &quot;give&quot;" classname="checkelementvalue;check-element-value-given">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the element &quot;#textarea-no-value&quot; value is not &quot;you&quot;" classname="checkelementvalue;check-element-value-given">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the element &quot;#select-value&quot; value is not &quot;up&quot;" classname="checkelementvalue;check-element-value-given">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the element &quot;#select-no-value&quot; value is not &quot;never&quot;" classname="checkelementvalue;check-element-value-given">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the element &quot;input[type=&apos;submit&apos;]&quot; value is not &quot;gonna let you go&quot;" classname="checkelementvalue;check-element-value-given">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkelementvisible;check-for-visible-element" tests="3" failures="0" skipped="3">
        <properties>
            <property name="URI" value="features/checkElementVisible.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/checkElementVisible.html&quot;" classname="checkelementvisible;check-for-visible-element">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect that the title is &quot;checkElementVisible - Test&quot;" classname="checkelementvisible;check-for-visible-element">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;.visible&quot; is visible" classname="checkelementvisible;check-for-visible-element">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkelementvisible;check-for-hidden-elements" tests="2" failures="1" skipped="1">
        <properties>
            <property name="URI" value="features/checkElementVisible.feature">
            </property>
        </properties>
        <testcase name="Then I expect the element &quot;.hidden&quot; is not visible" classname="checkelementvisible;check-for-hidden-elements" time="0.001">
            <failure message="AssertionError [ERR_ASSERTION]: Expected &quot;.hidden&quot; to be hidden">AssertionError [ERR_ASSERTION]: Expected &quot;.hidden&quot; to be hidden
    + expected - actual

    -false
    +true

    at BrowserScope.module.exports (/features/support/check/checkElementVisible.js:21:5)
    at BrowserScope.&lt;anonymous&gt; (/features/steps/then.js:30:35)</failure>
        </testcase>
        <testcase name="And I expect the element &quot;.bueller&quot; is not visible" classname="checkelementvisible;check-for-hidden-elements">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkelementvisible;check-for-elements-that-appear-after-a-timeout" tests="3" failures="1" skipped="2">
        <properties>
            <property name="URI" value="features/checkElementVisible.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/waitFor.html&quot;" classname="checkelementvisible;check-for-elements-that-appear-after-a-timeout" time="0.001">
            <failure message="TypeError: Cannot read property &apos;newPage&apos; of null">TypeError: Cannot read property &apos;newPage&apos; of null
    at BrowserScope.module.exports (/features/support/action/openUrl.js:14:36)
    at BrowserScope.&lt;anonymous&gt; (/features/steps/when.js:17:23)</failure>
        </testcase>
        <testcase name="Then I expect the element &quot;.starts-hidden&quot; is not visible" classname="checkelementvisible;check-for-elements-that-appear-after-a-timeout">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;.starts-hidden&quot; is visible after &quot;2.5&quot; seconds" classname="checkelementvisible;check-for-elements-that-appear-after-a-timeout">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkelementvisible;check-for-elements-that-appear-after-a-timeout" tests="3" failures="1" skipped="2">
        <properties>
            <property name="URI" value="features/checkElementVisible.feature">
            </property>
        </properties>
        <testcase name="Given the url &quot;http://localhost:8080/waitFor.html&quot; is opened" classname="checkelementvisible;check-for-elements-that-appear-after-a-timeout">
            <failure message="TypeError: Cannot read property &apos;newPage&apos; of null">TypeError: Cannot read property &apos;newPage&apos; of null
    at BrowserScope.module.exports (/features/support/action/openUrl.js:14:36)
    at BrowserScope.&lt;anonymous&gt; (/features/steps/given.js:23:23)</failure>
        </testcase>
        <testcase name="And the element &quot;.starts-hidden&quot; is not visible" classname="checkelementvisible;check-for-elements-that-appear-after-a-timeout">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the element &quot;.starts-hidden&quot; is visible after &quot;2.5&quot; seconds" classname="checkelementvisible;check-for-elements-that-appear-after-a-timeout">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkelementhasfocus;check-element-has-focus" tests="4" failures="0" skipped="4">
        <properties>
            <property name="URI" value="features/checkHasFocus.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/checkHasFocus.html&quot;" classname="checkelementhasfocus;check-element-has-focus">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect that the title is &quot;checkHasFocus - Test&quot;" classname="checkelementhasfocus;check-element-has-focus">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;#focus&quot; has focus" classname="checkelementhasfocus;check-element-has-focus">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;#no-focus&quot; has no focus" classname="checkelementhasfocus;check-element-has-focus">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkelementhasfocus;check-element-has-focus-given" tests="5" failures="1" skipped="4">
        <properties>
            <property name="URI" value="features/checkHasFocus.feature">
            </property>
        </properties>
        <testcase name="Given the element &quot;#focus&quot; has focus" classname="checkelementhasfocus;check-element-has-focus-given" time="0.001">
            <failure message="TypeError: Cannot read property &apos;$eval&apos; of null">TypeError: Cannot read property &apos;$eval&apos; of null
    at BrowserScope.module.exports (/features/support/check/checkHasFocus.js:11:36)</failure>
        </testcase>
        <testcase name="And the element &quot;#tobe-focused&quot; has no focus" classname="checkelementhasfocus;check-element-has-focus-given">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="When I click the element &quot;#tobe-focused&quot;" classname="checkelementhasfocus;check-element-has-focus-given">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;#tobe-focused&quot; has focus" classname="checkelementhasfocus;check-element-has-focus-given">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;#no-focus&quot; has no focus" classname="checkelementhasfocus;check-element-has-focus-given">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkischecked;check-element-is-checked" tests="3" failures="0" skipped="3">
        <properties>
            <property name="URI" value="features/checkIsChecked.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/checkIsChecked.html&quot;" classname="checkischecked;check-element-is-checked">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;#checked&quot; is checked" classname="checkischecked;check-element-is-checked">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;#not-checked&quot; is not checked" classname="checkischecked;check-element-is-checked">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkischecked;check-element-is-checked-given" tests="5" failures="1" skipped="4">
        <properties>
            <property name="URI" value="features/checkIsChecked.feature">
            </property>
        </properties>
        <testcase name="Given the element &quot;#checked&quot; is checked" classname="checkischecked;check-element-is-checked-given">
            <failure message="TypeError: Cannot read property &apos;$eval&apos; of null">TypeError: Cannot read property &apos;$eval&apos; of null
    at BrowserScope.module.exports (/features/support/check/checkIsChecked.js:11:39)</failure>
        </testcase>
        <testcase name="And the element &quot;#tobe-checked&quot; is not checked" classname="checkischecked;check-element-is-checked-given">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="When I click the element &quot;#tobe-checked&quot;" classname="checkischecked;check-element-is-checked-given">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then the element &quot;#tobe-checked&quot; is checked" classname="checkischecked;check-element-is-checked-given">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the element &quot;#checked&quot; is checked" classname="checkischecked;check-element-is-checked-given">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkisempty;check-element-empty" tests="5" failures="0" skipped="5">
        <properties>
            <property name="URI" value="features/checkIsEmpty.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/checkIsEmpty.html&quot;" classname="checkisempty;check-element-empty">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;.empty&quot; is empty" classname="checkisempty;check-element-empty">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;.not-empty&quot; is not empty" classname="checkisempty;check-element-empty">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;h1&quot; is empty" classname="checkisempty;check-element-empty">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;a[href=&apos;#google&apos;]&quot; is empty" classname="checkisempty;check-element-empty">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkisempty;check-element-empty-given" tests="2" failures="1" skipped="1">
        <properties>
            <property name="URI" value="features/checkIsEmpty.feature">
            </property>
        </properties>
        <testcase name="Given the element &quot;.empty&quot; is empty" classname="checkisempty;check-element-empty-given" time="0.001">
            <failure message="TypeError: Cannot read property &apos;$eval&apos; of null">TypeError: Cannot read property &apos;$eval&apos; of null
    at BrowserScope.module.exports (/features/support/check/checkIsEmpty.js:10:38)</failure>
        </testcase>
        <testcase name="And the element &quot;ul li:first-child&quot; is not empty" classname="checkisempty;check-element-empty-given">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkscreenshot;check-screenshot-matches" tests="2" failures="0" skipped="2">
        <properties>
            <property name="URI" value="features/checkScreenshot.feature">
            </property>
        </properties>
        <testcase name="Given I open the url &quot;http://localhost:8080/checkScreenshot.html&quot;" classname="checkscreenshot;check-screenshot-matches">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the screenshot of &quot;ccc-landing&quot; matches the web page" classname="checkscreenshot;check-screenshot-matches">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkscreenshot;check-screenshot-matches-then" tests="1" failures="1" skipped="0">
        <properties>
            <property name="URI" value="features/checkScreenshot.feature">
            </property>
        </properties>
        <testcase name="Then I expect the screenshot of &quot;ccc-landing&quot; matches the web page" classname="checkscreenshot;check-screenshot-matches-then" time="0.001">
            <failure message="TypeError: Cannot read property &apos;screenshot&apos; of null">TypeError: Cannot read property &apos;screenshot&apos; of null
    at BrowserScope.module.exports (/features/support/check/checkScreenshot.js:25:19)
    at BrowserScope.&lt;anonymous&gt; (/features/steps/then.js:117:31)</failure>
        </testcase>
    </testsuite>
    <testsuite name="checktitle;check-title" tests="2" failures="0" skipped="2">
        <properties>
            <property name="URI" value="features/checkTitle.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/checkTitle.html&quot;" classname="checktitle;check-title">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect that the title is &quot;checkTitle - Test&quot;" classname="checktitle;check-title">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checktitlecontains;check-page-title-contains-expected-substring" tests="3" failures="0" skipped="3">
        <properties>
            <property name="URI" value="features/checkTitleContains.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/checkTitleContains.html&quot;" classname="checktitlecontains;check-page-title-contains-expected-substring">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the page title contains &quot;checkTitle&quot;" classname="checktitlecontains;check-page-title-contains-expected-substring">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the page title does not contain &quot;notMatchingTitle - Test&quot;" classname="checktitlecontains;check-page-title-contains-expected-substring">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checktitlecontains;check-page-title-contains-given-substring" tests="2" failures="1" skipped="1">
        <properties>
            <property name="URI" value="features/checkTitleContains.feature">
            </property>
        </properties>
        <testcase name="Given the page title contains &quot;Title&quot;" classname="checktitlecontains;check-page-title-contains-given-substring" time="0.001">
            <failure message="TypeError: Cannot read property &apos;title&apos; of null">TypeError: Cannot read property &apos;title&apos; of null
    at BrowserScope.module.exports (/features/support/check/checkTitleContains.js:9:40)</failure>
        </testcase>
        <testcase name="Then I expect that the title is &quot;checkTitleContains - Test&quot;" classname="checktitlecontains;check-page-title-contains-given-substring">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkurl;check-url" tests="3" failures="0" skipped="3">
        <properties>
            <property name="URI" value="features/checkUrl.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/checkTitle.html&quot;" classname="checkurl;check-url">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the page url is &quot;http://localhost:8080/checkTitle.html&quot;" classname="checkurl;check-url">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the page url is not &quot;http://localhost:8080/checkContainsText.html&quot;" classname="checkurl;check-url">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkurl;check-url-given" tests="1" failures="1" skipped="0">
        <properties>
            <property name="URI" value="features/checkUrl.feature">
            </property>
        </properties>
        <testcase name="Given the page url is &quot;http://localhost:8080/checkTitle.html&quot;" classname="checkurl;check-url-given">
            <failure message="TypeError: Cannot read property &apos;url&apos; of null">TypeError: Cannot read property &apos;url&apos; of null
    at BrowserScope.module.exports (/features/support/check/checkUrl.js:9:31)</failure>
        </testcase>
    </testsuite>
    <testsuite name="checkurlcontains;check-page-url-contains-a-substring" tests="3" failures="0" skipped="3">
        <properties>
            <property name="URI" value="features/checkUrlContains.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/checkTitle.html&quot;" classname="checkurlcontains;check-page-url-contains-a-substring">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the page url contains &quot;checkTitle&quot;" classname="checkurlcontains;check-page-url-contains-a-substring">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the page url does not contain &quot;#&quot;" classname="checkurlcontains;check-page-url-contains-a-substring">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="checkurlcontains;check-page-url-contains-given-text" tests="2" failures="1" skipped="1">
        <properties>
            <property name="URI" value="features/checkUrlContains.feature">
            </property>
        </properties>
        <testcase name="Given the page url contains &quot;che&quot;" classname="checkurlcontains;check-page-url-contains-given-text">
            <failure message="TypeError: Cannot read property &apos;url&apos; of null">TypeError: Cannot read property &apos;url&apos; of null
    at BrowserScope.module.exports (/features/support/check/checkUrlContains.js:9:31)</failure>
        </testcase>
        <testcase name="Then I expect the page url is &quot;http://localhost:8080/checkTitle.html&quot;" classname="checkurlcontains;check-page-url-contains-given-text">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="clickelement;click-button-with-javascript-event-handlers" tests="3" failures="0" skipped="3">
        <properties>
            <property name="URI" value="features/clickElement.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/clickElement.html&quot;" classname="clickelement;click-button-with-javascript-event-handlers">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I click the element &quot;.javascript&quot;" classname="clickelement;click-button-with-javascript-event-handlers">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;.inc&quot; contains text &quot;1&quot;" classname="clickelement;click-button-with-javascript-event-handlers">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="clickelement;click-link-that-updates-page-hash" tests="2" failures="1" skipped="1">
        <properties>
            <property name="URI" value="features/clickElement.feature">
            </property>
        </properties>
        <testcase name="When I click the link &quot;a.hash&quot;" classname="clickelement;click-link-that-updates-page-hash">
            <failure message="TypeError: Cannot read property &apos;click&apos; of null">TypeError: Cannot read property &apos;click&apos; of null
    at BrowserScope.module.exports (/features/support/action/clickElement.js:17:25)
    at BrowserScope.&lt;anonymous&gt; (/features/steps/when.js:35:28)</failure>
        </testcase>
        <testcase name="Then I expect the page url is &quot;http://localhost:8080/clickElement.html#somehash&quot;" classname="clickelement;click-link-that-updates-page-hash">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="clickelement;click-link-that-causes-navigation" tests="2" failures="1" skipped="1">
        <properties>
            <property name="URI" value="features/clickElement.feature">
            </property>
        </properties>
        <testcase name="When I click the link &quot;a.nav&quot; and wait for the element &quot;#cssClass&quot;" classname="clickelement;click-link-that-causes-navigation">
            <failure message="TypeError: Cannot read property &apos;waitForSelector&apos; of null">TypeError: Cannot read property &apos;waitForSelector&apos; of null
    at BrowserScope.module.exports (/features/support/action/clickElement.js:11:23)
    at BrowserScope.&lt;anonymous&gt; (/features/steps/when.js:41:28)</failure>
        </testcase>
        <testcase name="Then I expect the page url is &quot;http://localhost:8080/checkAttribute.html&quot;" classname="clickelement;click-link-that-causes-navigation">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="clickelement;click-form-submit-button" tests="3" failures="1" skipped="2">
        <properties>
            <property name="URI" value="features/clickElement.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/clickElement.html&quot;" classname="clickelement;click-form-submit-button">
            <failure message="TypeError: Cannot read property &apos;newPage&apos; of null">TypeError: Cannot read property &apos;newPage&apos; of null
    at BrowserScope.module.exports (/features/support/action/openUrl.js:14:36)
    at BrowserScope.&lt;anonymous&gt; (/features/steps/when.js:17:23)</failure>
        </testcase>
        <testcase name="And I click the button &quot;[type=&apos;submit&apos;]&quot; and wait for the element &quot;.wizard&quot;" classname="clickelement;click-form-submit-button">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the page url is &quot;http://localhost:8080/checkContainsText.html?listenhere=meow&quot;" classname="clickelement;click-form-submit-button">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="deletecookie;delete-cookie" tests="4" failures="0" skipped="4">
        <properties>
            <property name="URI" value="features/deleteCookie.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/deleteCookie.html&quot;" classname="deletecookie;delete-cookie">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the cookie &quot;existing-cookie&quot; exist" classname="deletecookie;delete-cookie">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I delete the cookie &quot;existing-cookie&quot;" classname="deletecookie;delete-cookie">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the cookie &quot;existing-cookie&quot; not exist" classname="deletecookie;delete-cookie">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="deletecookie;delete-cookie-when" tests="2" failures="1" skipped="1">
        <properties>
            <property name="URI" value="features/deleteCookie.feature">
            </property>
        </properties>
        <testcase name="When I delete the cookie &quot;second-existing-cookie&quot;" classname="deletecookie;delete-cookie-when" time="0.001">
            <failure message="TypeError: Cannot read property &apos;cookies&apos; of null">TypeError: Cannot read property &apos;cookies&apos; of null
    at BrowserScope.module.exports (/features/support/action/deleteCookie.js:7:39)</failure>
        </testcase>
        <testcase name="Then I expect the cookie &quot;second-existing-cookie&quot; not exist" classname="deletecookie;delete-cookie-when">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="fileupload;set-a-file-input-element-value" tests="4" failures="0" skipped="4">
        <properties>
            <property name="URI" value="features/fileUpload.feature">
            </property>
        </properties>
        <testcase name="Given the url &quot;http://localhost:8080/fileUpload.html&quot; is opened" classname="fileupload;set-a-file-input-element-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="When I set the file element &quot;input[type=&apos;file&apos;]&quot; value to &quot;./test/screenshots/ref/ccc-landing.png&quot;" classname="fileupload;set-a-file-input-element-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;.file-name&quot; is visible after &quot;5&quot; seconds" classname="fileupload;set-a-file-input-element-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;.file-name&quot; contains text &quot;ccc-landing.png&quot;" classname="fileupload;set-a-file-input-element-value">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="keyboardpress;press-a-key" tests="3" failures="0" skipped="3">
        <properties>
            <property name="URI" value="features/keyboardPress.feature">
            </property>
        </properties>
        <testcase name="Given the url &quot;http://localhost:8080/keyboardPress.html&quot; is opened" classname="keyboardpress;press-a-key">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="When I press the &quot;Enter&quot; key" classname="keyboardpress;press-a-key">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;.message&quot; contains text &quot;Great success!&quot;" classname="keyboardpress;press-a-key">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="keyboardpress;press-a-key-with-focus-on-an-element" tests="3" failures="1" skipped="2">
        <properties>
            <property name="URI" value="features/keyboardPress.feature">
            </property>
        </properties>
        <testcase name="Given the element &quot;input[type=&apos;text&apos;]&quot; has no focus" classname="keyboardpress;press-a-key-with-focus-on-an-element" time="0.001">
            <failure message="TypeError: Cannot read property &apos;$eval&apos; of null">TypeError: Cannot read property &apos;$eval&apos; of null
    at BrowserScope.module.exports (/features/support/check/checkHasFocus.js:11:36)</failure>
        </testcase>
        <testcase name="When I press the &quot;Enter&quot; key on the &quot;input[type=&apos;text&apos;]&quot; element" classname="keyboardpress;press-a-key-with-focus-on-an-element">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;input[type=&apos;text&apos;]&quot; has focus" classname="keyboardpress;press-a-key-with-focus-on-an-element">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="openurl;open-a-url-in-a-given-step" tests="2" failures="0" skipped="2">
        <properties>
            <property name="URI" value="features/openUrl.feature">
            </property>
        </properties>
        <testcase name="Given the url &quot;http://localhost:8080/checkTitle.html&quot; is opened" classname="openurl;open-a-url-in-a-given-step">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the page url is &quot;http://localhost:8080/checkTitle.html&quot;" classname="openurl;open-a-url-in-a-given-step">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="openurl;open-a-url-in-a-when-step-using-a-root-url-environment-variable" tests="2" failures="1" skipped="1">
        <properties>
            <property name="URI" value="features/openUrl.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/waitFor.html&quot;" classname="openurl;open-a-url-in-a-when-step-using-a-root-url-environment-variable" time="0.001">
            <failure message="TypeError: Cannot read property &apos;newPage&apos; of null">TypeError: Cannot read property &apos;newPage&apos; of null
    at BrowserScope.module.exports (/features/support/action/openUrl.js:14:36)
    at BrowserScope.&lt;anonymous&gt; (/features/steps/when.js:17:23)</failure>
        </testcase>
        <testcase name="Then I expect the page url is &quot;http://localhost:8080/waitFor.html&quot;" classname="openurl;open-a-url-in-a-when-step-using-a-root-url-environment-variable">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="openurl;set-the-user-agent-string" tests="3" failures="1" skipped="2">
        <properties>
            <property name="URI" value="features/openUrl.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/setUserAgent.html&quot; with user agent &quot;IE6&quot;" classname="openurl;set-the-user-agent-string" time="0.001">
            <failure message="TypeError: Cannot read property &apos;newPage&apos; of null">TypeError: Cannot read property &apos;newPage&apos; of null
    at BrowserScope.module.exports (/features/support/action/openUrl.js:14:36)
    at BrowserScope.&lt;anonymous&gt; (/features/steps/when.js:23:23)</failure>
        </testcase>
        <testcase name="And I wait for element &quot;.user-agent&quot;" classname="openurl;set-the-user-agent-string">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;.user-agent&quot; contains text &quot;IE6&quot;" classname="openurl;set-the-user-agent-string">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="openurl;emulate-a-device" tests="3" failures="1" skipped="2">
        <properties>
            <property name="URI" value="features/openUrl.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/setUserAgent.html&quot; with device &quot;iPhone X&quot;" classname="openurl;emulate-a-device">
            <failure message="TypeError: Cannot read property &apos;newPage&apos; of null">TypeError: Cannot read property &apos;newPage&apos; of null
    at BrowserScope.module.exports (/features/support/action/openUrl.js:14:36)
    at BrowserScope.&lt;anonymous&gt; (/features/steps/when.js:29:23)</failure>
        </testcase>
        <testcase name="And I wait for element &quot;.user-agent&quot;" classname="openurl;emulate-a-device">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;.user-agent&quot; contains text &quot;iPhone OS 11_0&quot;" classname="openurl;emulate-a-device">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="resizescreensize;resize-screen-size" tests="3" failures="0" skipped="3">
        <properties>
            <property name="URI" value="features/resizeScreenSize.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/resizeScreenSize.html&quot;" classname="resizescreensize;resize-screen-size">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I set the browser viewport to 600px width by 400px height" classname="resizescreensize;resize-screen-size">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;#boxwidth&quot; contains text &quot;Box width : 100&quot;" classname="resizescreensize;resize-screen-size">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="resizescreensize;verifies-resized-screen" tests="2" failures="1" skipped="1">
        <properties>
            <property name="URI" value="features/resizeScreenSize.feature">
            </property>
        </properties>
        <testcase name="When I set the browser viewport to 1280px width by 680px height" classname="resizescreensize;verifies-resized-screen" time="0.001">
            <failure message="Error: Error: width &quot;1280&quot; or height &quot;680&quot; is invalid">Error: Error: width &quot;1280&quot; or height &quot;680&quot; is invalid
    at BrowserScope.module.exports (/features/support/action/resizeScreenSize.js:14:13)</failure>
        </testcase>
        <testcase name="Then I expect the element &quot;#boxwidth&quot; contains text &quot;Box width : 700&quot;" classname="resizescreensize;verifies-resized-screen">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="scrolltoelement;scroll-to-the-top-of-an-existing-element" tests="5" failures="0" skipped="5">
        <properties>
            <property name="URI" value="features/scrollToElement.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/scrollToElement.html&quot;" classname="scrolltoelement;scroll-to-the-top-of-an-existing-element">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I scroll to the element &quot;#second&quot;" classname="scrolltoelement;scroll-to-the-top-of-an-existing-element">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;#second-clue&quot; contains text &quot;In View&quot;" classname="scrolltoelement;scroll-to-the-top-of-an-existing-element">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;#first-clue&quot; contains text &quot;Out of View&quot;" classname="scrolltoelement;scroll-to-the-top-of-an-existing-element">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;#third-clue&quot; contains text &quot;Out of View&quot;" classname="scrolltoelement;scroll-to-the-top-of-an-existing-element">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="scrolltoelement;scroll-to-the-top-of-another-existing-element" tests="3" failures="1" skipped="2">
        <properties>
            <property name="URI" value="features/scrollToElement.feature">
            </property>
        </properties>
        <testcase name="When I scroll to the element &quot;#fourth&quot;" classname="scrolltoelement;scroll-to-the-top-of-another-existing-element" time="0.002">
            <failure message="AssertionError [ERR_ASSERTION]: Error: failed to scroll to element matching selector &quot;#fourth&quot;">AssertionError [ERR_ASSERTION]: Error: failed to scroll to element matching selector &quot;#fourth&quot;
    at BrowserScope.module.exports (/features/support/action/scrollToElement.js:20:12)</failure>
        </testcase>
        <testcase name="Then I expect the element &quot;#fourth-clue&quot; contains text &quot;In View&quot;" classname="scrolltoelement;scroll-to-the-top-of-another-existing-element">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;#second-clue&quot; contains text &quot;Out of View&quot;" classname="scrolltoelement;scroll-to-the-top-of-another-existing-element">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="scrolltoelement;scroll-to-the-top-of-yet-another-element-(excitment!)" tests="3" failures="1" skipped="2">
        <properties>
            <property name="URI" value="features/scrollToElement.feature">
            </property>
        </properties>
        <testcase name="When I scroll to the element &quot;#third&quot;" classname="scrolltoelement;scroll-to-the-top-of-yet-another-element-(excitment!)" time="0.001">
            <failure message="AssertionError [ERR_ASSERTION]: Error: failed to scroll to element matching selector &quot;#third&quot;">AssertionError [ERR_ASSERTION]: Error: failed to scroll to element matching selector &quot;#third&quot;
    at BrowserScope.module.exports (/features/support/action/scrollToElement.js:20:12)</failure>
        </testcase>
        <testcase name="Then I expect the element &quot;#third-clue&quot; contains text &quot;In View&quot;" classname="scrolltoelement;scroll-to-the-top-of-yet-another-element-(excitment!)">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the element &quot;#first-clue&quot; contains text &quot;Out of View&quot;" classname="scrolltoelement;scroll-to-the-top-of-yet-another-element-(excitment!)">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="setelementstyle;set-element-&quot;display&quot;-style" tests="4" failures="0" skipped="4">
        <properties>
            <property name="URI" value="features/setElementStyle.feature">
            </property>
        </properties>
        <testcase name="Given the url &quot;http://localhost:8080/setElementStyle.html&quot; is opened" classname="setelementstyle;set-element-&quot;display&quot;-style">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the element &quot;.hidden&quot; is not visible" classname="setelementstyle;set-element-&quot;display&quot;-style">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="When I set the element &quot;.hidden&quot; style &quot;display&quot; to &quot;block&quot;" classname="setelementstyle;set-element-&quot;display&quot;-style">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;.hidden&quot; is visible" classname="setelementstyle;set-element-&quot;display&quot;-style">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="setelementstyle;set-element-&quot;visibility&quot;-style" tests="3" failures="1" skipped="2">
        <properties>
            <property name="URI" value="features/setElementStyle.feature">
            </property>
        </properties>
        <testcase name="Given the element &quot;.visible&quot; is visible" classname="setelementstyle;set-element-&quot;visibility&quot;-style" time="0.001">
            <failure message="AssertionError [ERR_ASSERTION]: Expected &quot;.visible&quot; to be visible">AssertionError [ERR_ASSERTION]: Expected &quot;.visible&quot; to be visible
    + expected - actual

    -false
    +true

    at BrowserScope.module.exports (/features/support/check/checkElementVisible.js:21:5)
    at BrowserScope.&lt;anonymous&gt; (/features/steps/given.js:41:35)</failure>
        </testcase>
        <testcase name="When I set the element &quot;.visible&quot; style &quot;visibility&quot; to &quot;hidden&quot;" classname="setelementstyle;set-element-&quot;visibility&quot;-style">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;.visible&quot; is not visible" classname="setelementstyle;set-element-&quot;visibility&quot;-style">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="setelementstyle;set-multiple-element-styles" tests="4" failures="1" skipped="3">
        <properties>
            <property name="URI" value="features/setElementStyle.feature">
            </property>
        </properties>
        <testcase name="When I set the element &quot;li&quot; style &quot;fontWeight&quot; to &quot;bold&quot;" classname="setelementstyle;set-multiple-element-styles">
            <failure message="TypeError: Cannot read property &apos;$$eval&apos; of null">TypeError: Cannot read property &apos;$$eval&apos; of null
    at BrowserScope.module.exports (/features/support/action/setElementStyle.js:14:25)</failure>
        </testcase>
        <testcase name="Then I expect the attribute &quot;style&quot; from element &quot;li:nth-child(1)&quot; contain &quot;font-weight: bold&quot;" classname="setelementstyle;set-multiple-element-styles">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the attribute &quot;style&quot; from element &quot;li:nth-child(2)&quot; contain &quot;font-weight: bold&quot;" classname="setelementstyle;set-multiple-element-styles">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I expect the attribute &quot;style&quot; from element &quot;li:nth-child(3)&quot; contain &quot;font-weight: bold&quot;" classname="setelementstyle;set-multiple-element-styles">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="setelementvalue;set-element-value" tests="9" failures="0" skipped="9">
        <properties>
            <property name="URI" value="features/setElementValue.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/setElementValue.html&quot;" classname="setelementvalue;set-element-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I set the element &quot;.enabled&quot; value to &quot;rick&quot;" classname="setelementvalue;set-element-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I set the element &quot;select[name=&apos;cartoon-characters&apos;]&quot; value to &quot;morty&quot;" classname="setelementvalue;set-element-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I set the element &quot;textarea&quot; value to &quot;Meeseeks and Destroys&quot;" classname="setelementvalue;set-element-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I set the element &quot;[type=&apos;password&apos;]&quot; value to &quot;$TEST_PASSWORD&quot;" classname="setelementvalue;set-element-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then the element &quot;.enabled&quot; value is &quot;rick&quot;" classname="setelementvalue;set-element-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the element &quot;select[name=&apos;cartoon-characters&apos;]&quot; value is &quot;morty&quot;" classname="setelementvalue;set-element-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the element &quot;textarea&quot; value is &quot;Meeseeks and Destroys&quot;" classname="setelementvalue;set-element-value">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the element &quot;[type=&apos;password&apos;]&quot; value is &quot;pass&quot;" classname="setelementvalue;set-element-value">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="setuseragent;set-the-user-agent-string" tests="4" failures="0" skipped="4">
        <properties>
            <property name="URI" value="features/setUserAgent.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/setUserAgent.html&quot;" classname="setuseragent;set-the-user-agent-string">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I set the user agent to &quot;IE6&quot;" classname="setuseragent;set-the-user-agent-string">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I wait for element &quot;.user-agent&quot;" classname="setuseragent;set-the-user-agent-string">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;.user-agent&quot; contains text &quot;IE6&quot;" classname="setuseragent;set-the-user-agent-string">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="waitfor;after-waiting-for-2.5-seconds,-the-element-is-visible" tests="4" failures="0" skipped="4">
        <properties>
            <property name="URI" value="features/waitFor.feature">
            </property>
        </properties>
        <testcase name="Given the url &quot;http://localhost:8080/waitFor.html&quot; is opened" classname="waitfor;after-waiting-for-2.5-seconds,-the-element-is-visible">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And the element &quot;.starts-hidden&quot; is not visible" classname="waitfor;after-waiting-for-2.5-seconds,-the-element-is-visible">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="And I wait for 2.5 seconds" classname="waitfor;after-waiting-for-2.5-seconds,-the-element-is-visible">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;.starts-hidden&quot; is visible" classname="waitfor;after-waiting-for-2.5-seconds,-the-element-is-visible">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="waitfor;after-waiting-for-3-seconds,-the-element-is-visible" tests="3" failures="1" skipped="2">
        <properties>
            <property name="URI" value="features/waitFor.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/waitFor.html&quot;" classname="waitfor;after-waiting-for-3-seconds,-the-element-is-visible" time="0.001">
            <failure message="TypeError: Cannot read property &apos;newPage&apos; of null">TypeError: Cannot read property &apos;newPage&apos; of null
    at BrowserScope.module.exports (/features/support/action/openUrl.js:14:36)
    at BrowserScope.&lt;anonymous&gt; (/features/steps/when.js:17:23)</failure>
        </testcase>
        <testcase name="And I wait for 3 seconds" classname="waitfor;after-waiting-for-3-seconds,-the-element-is-visible">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;.starts-hidden&quot; is visible" classname="waitfor;after-waiting-for-3-seconds,-the-element-is-visible">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="waitforselector;waiting-the-default-30s-timeout-for-the-selector" tests="3" failures="0" skipped="3">
        <properties>
            <property name="URI" value="features/waitForSelector.feature">
            </property>
        </properties>
        <testcase name="Given the url &quot;http://localhost:8080/waitForSelector.html&quot; is opened" classname="waitforselector;waiting-the-default-30s-timeout-for-the-selector">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="When I wait for element &quot;.delayed&quot;" classname="waitforselector;waiting-the-default-30s-timeout-for-the-selector">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;.delayed&quot; is on the page" classname="waitforselector;waiting-the-default-30s-timeout-for-the-selector">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
    <testsuite name="waitforselector;waiting-a-custom-10s-timeout-for-the-selector" tests="3" failures="1" skipped="2">
        <properties>
            <property name="URI" value="features/waitForSelector.feature">
            </property>
        </properties>
        <testcase name="When I open the url &quot;http://localhost:8080/waitForSelector.html&quot;" classname="waitforselector;waiting-a-custom-10s-timeout-for-the-selector">
            <failure message="TypeError: Cannot read property &apos;newPage&apos; of null">TypeError: Cannot read property &apos;newPage&apos; of null
    at BrowserScope.module.exports (/features/support/action/openUrl.js:14:36)
    at BrowserScope.&lt;anonymous&gt; (/features/steps/when.js:17:23)</failure>
        </testcase>
        <testcase name="And I wait for element &quot;.delayed&quot; for 10 seconds" classname="waitforselector;waiting-a-custom-10s-timeout-for-the-selector">
            <skipped message="">
            </skipped>
        </testcase>
        <testcase name="Then I expect the element &quot;.delayed&quot; is on the page" classname="waitforselector;waiting-a-custom-10s-timeout-for-the-selector">
            <skipped message="">
            </skipped>
        </testcase>
    </testsuite>
</testsuites>